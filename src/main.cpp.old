#include <Arduino.h>
#include <Wire.h>
#include <SPI.h>
#include <TFT_eSPI.h>
#include "FT62XXTouchScreen.h"

TFT_eSPI tft = TFT_eSPI();
FT62XXTouchScreen touchScreen = FT62XXTouchScreen(TFT_WIDTH, PIN_SDA, PIN_SCL);

#include "lvgl.h"
#include "esp_freertos_hooks.h"

static lv_disp_buf_t disp_buf;
static lv_color_t buf[LV_HOR_RES_MAX * 10];

lv_obj_t *btn1;
lv_obj_t *btn2;
lv_obj_t *screenMain;
lv_obj_t *label;

static void event_handler_btn(lv_obj_t *obj, lv_event_t event)
{
  if (event == LV_EVENT_CLICKED)
  {
    if (obj == btn1)
      lv_label_set_text(label, "Botao Ola foi pressionado...");
    else if (obj == btn2)
    {
      lv_label_set_text(label, "Botao Adeus foi pressionado...");
    }
  }
}

void my_disp_flush(lv_disp_drv_t *disp, const lv_area_t *area, lv_color_t *color_p)
{
  uint32_t w = (area->x2 - area->x1 + 1);
  uint32_t h = (area->y2 - area->y1 + 1);

  tft.startWrite();
  tft.setAddrWindow(area->x1, area->y1, w, h);
  tft.pushColors(&color_p->full, w * h, true);
  tft.endWrite();

  lv_disp_flush_ready(disp);
}

uint16_t lastx = 0;
uint16_t lasty = 0;

bool my_input_read2(lv_indev_drv_t *drv, lv_indev_data_t *data)
{
  TouchPoint touchPos = touchScreen.read();
  if (touchPos.touched)
  {
    data->state = LV_INDEV_STATE_PR;
    data->point.x = touchPos.xPos;
    data->point.y = touchPos.yPos;
    lastx = touchPos.xPos;
    lasty = touchPos.yPos;

    String text = "X=" + String(touchPos.xPos) + " : Y=" + String(touchPos.yPos);
    lv_label_set_text(label, text.c_str());
    Serial.println(text);
    lv_obj_set_style_local_bg_color(btn1, LV_BTN_PART_MAIN, LV_STATE_DEFAULT, LV_COLOR_WHITE);
    lv_obj_set_style_local_bg_color(btn2, LV_BTN_PART_MAIN, LV_STATE_DEFAULT, LV_COLOR_WHITE);

    int offsetY = 160;

    // botao 1
    if ((touchPos.xPos >= btn1->coords.x1) && (touchPos.xPos <= btn1->coords.x2))
    {
      if ((touchPos.yPos >= btn1->coords.y1 + offsetY) && (touchPos.yPos <= btn1->coords.y2 + offsetY))
      {
        // area do botao 1
        lv_label_set_text(label, "Pressionado BOTAO 1");
        lv_obj_set_style_local_bg_color(btn1, LV_BTN_PART_MAIN, LV_STATE_DEFAULT, LV_COLOR_RED);
      }
    }

    // botao 2
    if ((touchPos.xPos >= btn2->coords.x1) && (touchPos.xPos <= btn2->coords.x2))
    {
      if ((touchPos.yPos >= btn2->coords.y1 + offsetY) && (touchPos.yPos <= btn2->coords.y2 + offsetY))
      {
        // area do botao 2
        lv_label_set_text(label, "Pressionado BOTAO 2");
        lv_obj_set_style_local_bg_color(btn2, LV_BTN_PART_MAIN, LV_STATE_DEFAULT, LV_COLOR_RED);
      }
    }
  }
  else
  {
    data->state = LV_INDEV_STATE_REL;
    data->point.x = lastx;
    data->point.y = lasty;
  }
  return false;
}

static void lv_tick_task(void)
{
  lv_tick_inc(portTICK_RATE_MS);
}

void setup()
{
  lv_disp_drv_t disp_drv;
  lv_indev_drv_t indev_drv;

  Serial.begin(115200);
  lv_init();
  // Setup tick hook for lv_tick_task
  esp_err_t err = esp_register_freertos_tick_hook((esp_freertos_tick_cb_t)lv_tick_task);

  // Enable TFT
  tft.begin();
  tft.setRotation(1);

  // Enable Backlight
  pinMode(TFT_BL, OUTPUT);
  digitalWrite(TFT_BL, 1);

  // Start TouchScreen
  touchScreen.begin();

  // Display Buffer
  lv_disp_buf_init(&disp_buf, buf, NULL, LV_HOR_RES_MAX * 10);

  // Init Display
  lv_disp_drv_init(&disp_drv);
  disp_drv.hor_res = 480;
  disp_drv.ver_res = 320;
  disp_drv.flush_cb = my_disp_flush;
  disp_drv.buffer = &disp_buf;
  lv_disp_drv_register(&disp_drv);

  // Init Touchscreen
  lv_indev_drv_init(&indev_drv);
  indev_drv.type = LV_INDEV_TYPE_POINTER;
  indev_drv.read_cb = my_input_read2;
  lv_indev_drv_register(&indev_drv);

  // Screen Object
  screenMain = lv_obj_create(NULL, NULL);

  // Text
  label = lv_label_create(screenMain, NULL);
  lv_label_set_long_mode(label, LV_LABEL_LONG_BREAK);
  lv_label_set_text(label, "Pressione um botao...");
  lv_label_set_align(label, LV_LABEL_ALIGN_CENTER);
  lv_obj_set_size(label, 240, 40);
  lv_obj_set_pos(label, 0, 15);

  // Button 1
  btn1 = lv_btn_create(screenMain, NULL);
  lv_obj_set_event_cb(btn1, event_handler_btn);
  lv_obj_set_width(btn1, 90);
  lv_obj_set_height(btn1, 45);
  lv_obj_set_pos(btn1, 32, 100);
  lv_obj_t *label1 = lv_label_create(btn1, NULL);
  lv_label_set_text(label1, "Ola");

  // Button 2
  btn2 = lv_btn_create(screenMain, NULL);
  lv_obj_set_event_cb(btn2, event_handler_btn);
  lv_obj_set_width(btn2, 90);
  lv_obj_set_height(btn2, 45);
  lv_obj_set_pos(btn2, 142, 100);
  lv_obj_t *label2 = lv_label_create(btn2, NULL);
  lv_label_set_text(label2, "Adeus");

  // Screen load
  lv_scr_load(screenMain);
}

void loop()
{
  lv_task_handler();
  delay(1);
}
